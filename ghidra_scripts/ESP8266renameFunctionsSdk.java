//
//@author Adam Alvarado
//@category 
//@keybinding
//@menupath
//@toolbar

import ghidra.app.script.GhidraScript;
import ghidra.program.model.address.AddressFormatException;
import ghidra.program.model.listing.Function;
import ghidra.program.model.symbol.SourceType;
import ghidra.util.exception.DuplicateNameException;
import ghidra.util.exception.InvalidInputException;

public class ESP8266renameFunctionsSdk extends GhidraScript {

	@Override
	protected void run() throws Exception {
		renameFunction("0x400047f0", "Cache_Read_Disable");
		renameFunction("0x40004678", "Cache_Read_Enable");
		renameFunction("0x400035a0", "FilePacketSendReqMsgProc");
		renameFunction("0x4000368c", "FlashDwnLdParamCfgMsgProc");
		renameFunction("0x40003538", "FlashDwnLdStartMsgProc");
		renameFunction("0x40003658", "FlashDwnLdStopReqMsgProc");
		renameFunction("0x40003f4c", "GetUartDevice");
		renameFunction("0x40009900", "MD5Final");
		renameFunction("0x40009818", "MD5Init");
		renameFunction("0x40009834", "MD5Update");
		renameFunction("0x400036c4", "MemDwnLdStartMsgProc");
		renameFunction("0x4000377c", "MemDwnLdStopReqMsgProc");
		renameFunction("0x400036f0", "MemPacketSendReqMsgProc");
		renameFunction("0x40003eac", "RcvMsg");
		renameFunction("0x4000b648", "SHA1Final");
		renameFunction("0x4000b584", "SHA1Init");
		renameFunction("0x4000a364", "SHA1Transform");
		renameFunction("0x4000b5a8", "SHA1Update");
		renameFunction("0x40004b44", "SPIEraseArea");
		renameFunction("0x400049b4", "SPIEraseBlock");
		renameFunction("0x40004984", "SPIEraseChip");
		renameFunction("0x40004a00", "SPIEraseSector");
		renameFunction("0x400048a8", "SPILock");
		renameFunction("0x40004c2c", "SPIParamCfg");
		renameFunction("0x40004b1c", "SPIRead");
		renameFunction("0x400048ec", "SPIReadModeCnfig");
		renameFunction("0x40004878", "SPIUnlock");
		renameFunction("0x40004a4c", "SPIWrite");
		renameFunction("0x40003f58", "SelectSpiFunction");
		renameFunction("0x40003cf4", "SendMsg");
		renameFunction("0x40003230", "UartConnCheck");
		renameFunction("0x400037a0", "UartConnectProc");
		renameFunction("0x40003368", "UartDwnLdProc");
		renameFunction("0x40003ef4", "UartGetCmdLn");
		renameFunction("0x4000381c", "UartRegReadProc");
		renameFunction("0x400037ac", "UartRegWriteProc");
		renameFunction("0x40003c30", "UartRxString");
		renameFunction("0x40003a14", "Uart_Init");
		renameFunction("0x40000010", "_DebugExceptionVector");
		renameFunction("0x40000070", "_DoubleExceptionVector");
		renameFunction("0x40000030", "_KernelExceptionVector");
		renameFunction("0x40000020", "_NMIExceptionVector");
		renameFunction("0x400000a4", "_ResetHandler");
		renameFunction("0x40000080", "_ResetVector");
		renameFunction("0x40000050", "_UserExceptionVector");
		renameFunction("0x4000c538", "__adddf3");
		renameFunction("0x4000c180", "__addsf3");
		renameFunction("0x4000cb94", "__divdf3");
		renameFunction("0x4000ce60", "__divdi3");
		renameFunction("0x4000dc88", "__divsi3");
		renameFunction("0x4000cdfc", "__extendsfdf2");
		renameFunction("0x4000ccb8", "__fixdfsi");
		renameFunction("0x4000cd00", "__fixunsdfsi");
		renameFunction("0x4000c4c4", "__fixunssfsi");
		renameFunction("0x4000e2f0", "__floatsidf");
		renameFunction("0x4000e2ac", "__floatsisf");
		renameFunction("0x4000e2e8", "__floatunsidf");
		renameFunction("0x4000e2a4", "__floatunsisf");
		renameFunction("0x4000c8f0", "__muldf3");
		renameFunction("0x40000650", "__muldi3");
		renameFunction("0x4000c3dc", "__mulsf3");
		renameFunction("0x4000c688", "__subdf3");
		renameFunction("0x4000c268", "__subsf3");
		renameFunction("0x4000cd5c", "__truncdfsf2");
		renameFunction("0x4000d310", "__udivdi3");
		renameFunction("0x4000e21c", "__udivsi3");
		renameFunction("0x4000d770", "__umoddi3");
		renameFunction("0x4000e268", "__umodsi3");
		renameFunction("0x4000dcf0", "__umulsidi3");
		renameFunction("0x4000e388", "_rom_store");
		renameFunction("0x4000e328", "_rom_store_table");
		renameFunction("0x4000042c", "_start");
		renameFunction("0x4000dbe0", "_xtos_alloca_handler");
		renameFunction("0x40000598", "_xtos_c_wrapper_handler");
		renameFunction("0x40000590", "_xtos_cause3_handler");
		renameFunction("0x4000bda4", "_xtos_ints_off");
		renameFunction("0x4000bd84", "_xtos_ints_on");
		renameFunction("0x4000048c", "_xtos_l1int_handler");
		renameFunction("0x4000dbf8", "_xtos_p_none");
		renameFunction("0x4000056c", "_xtos_restore_intlevel");
		renameFunction("0x4000dc54", "_xtos_return_from_exc");
		renameFunction("0x40000454", "_xtos_set_exception_handler");
		renameFunction("0x4000bd70", "_xtos_set_interrupt_handler");
		renameFunction("0x4000bd28", "_xtos_set_interrupt_handler_arg");
		renameFunction("0x4000dbfc", "_xtos_set_intlevel");
		renameFunction("0x4000dc18", "_xtos_set_min_intlevel");
		renameFunction("0x40000574", "_xtos_set_vpri");
		renameFunction("0x4000dbe4", "_xtos_syscall_handler");
		renameFunction("0x4000dc44", "_xtos_unhandled_exception");
		renameFunction("0x4000dc3c", "_xtos_unhandled_interrupt");
		renameFunction("0x400092d4", "aes_decrypt");
		renameFunction("0x400092e4", "aes_decrypt_deinit");
		renameFunction("0x40008ea4", "aes_decrypt_init");
		renameFunction("0x40009410", "aes_unwrap");
		renameFunction("0x40009648", "base64_decode");
		renameFunction("0x400094fc", "base64_encode");
		renameFunction("0x4000de84", "bzero");
		renameFunction("0x40000814", "cmd_parse");
		renameFunction("0x40000b24", "conv_str_decimal");
		renameFunction("0x40000cb8", "conv_str_hex");
		renameFunction("0x40000a60", "convert_para_str");
		renameFunction("0x400026d0", "dtm_get_intr_mask");
		renameFunction("0x4000269c", "dtm_params_init");
		renameFunction("0x400026c8", "dtm_set_intr_mask");
		renameFunction("0x400026dc", "dtm_set_params");
		renameFunction("0x40001d14", "eprintf");
		renameFunction("0x40001cb8", "eprintf_init_buf");
		renameFunction("0x40001d48", "eprintf_to_host");
		renameFunction("0x40002494", "est_get_printf_buf_remain_len");
		renameFunction("0x4000249c", "est_reset_printf_buf_len");
		renameFunction("0x40002ae8", "ets_bzero");
		renameFunction("0x40002b74", "ets_char2xdigit");
		renameFunction("0x40002ecc", "ets_delay_us");
		renameFunction("0x400027b8", "ets_enter_sleep");
		renameFunction("0x40002578", "ets_external_printf");
		renameFunction("0x40002f0c", "ets_get_cpu_frequency");
		renameFunction("0x40002bcc", "ets_getc");
		renameFunction("0x40002450", "ets_install_external_printf");
		renameFunction("0x4000242c", "ets_install_putc1");
		renameFunction("0x4000248c", "ets_install_putc2");
		renameFunction("0x40002438", "ets_install_uart_printf");
		renameFunction("0x40000f74", "ets_intr_lock");
		renameFunction("0x40000f80", "ets_intr_unlock");
		renameFunction("0x40000f88", "ets_isr_attach");
		renameFunction("0x40000f98", "ets_isr_mask");
		renameFunction("0x40000fa8", "ets_isr_unmask");
		renameFunction("0x400018d4", "ets_memcmp");
		renameFunction("0x400018b4", "ets_memcpy");
		renameFunction("0x400018c4", "ets_memmove");
		renameFunction("0x400018a4", "ets_memset");
		renameFunction("0x40000e24", "ets_post");
		renameFunction("0x400024cc", "ets_printf");
		renameFunction("0x40002be8", "ets_putc");
		renameFunction("0x40002a40", "ets_rtc_int_register");
		renameFunction("0x40000e04", "ets_run");
		renameFunction("0x40000dc0", "ets_set_idle_cb");
		renameFunction("0x40000fbc", "ets_set_user_start");
		renameFunction("0x40002af8", "ets_str2macaddr");
		renameFunction("0x40002aa8", "ets_strcmp");
		renameFunction("0x40002a88", "ets_strcpy");
		renameFunction("0x40002ac8", "ets_strlen");
		renameFunction("0x40002ab8", "ets_strncmp");
		renameFunction("0x40002a98", "ets_strncpy");
		renameFunction("0x40002ad8", "ets_strstr");
		renameFunction("0x40000dd0", "ets_task");
		renameFunction("0x40002cc4", "ets_timer_arm");
		renameFunction("0x40002d40", "ets_timer_disarm");
		renameFunction("0x40002d80", "ets_timer_done");
		renameFunction("0x40002da8", "ets_timer_handler_isr");
		renameFunction("0x40002e68", "ets_timer_init");
		renameFunction("0x40002c48", "ets_timer_setfn");
		renameFunction("0x40002544", "ets_uart_printf");
		renameFunction("0x40002f04", "ets_update_cpu_frequency");
		renameFunction("0x400030f0", "ets_wdt_disable");
		renameFunction("0x40002fa0", "ets_wdt_enable");
		renameFunction("0x40002f34", "ets_wdt_get_mode");
		renameFunction("0x40003170", "ets_wdt_init");
		renameFunction("0x40003158", "ets_wdt_restore");
		renameFunction("0x4000091c", "get_first_seg");
		renameFunction("0x40004c50", "gpio_init");
		renameFunction("0x40004cf0", "gpio_input_get");
		renameFunction("0x40004dcc", "gpio_intr_ack");
		renameFunction("0x40004e28", "gpio_intr_handler_register");
		renameFunction("0x40004d88", "gpio_intr_pending");
		renameFunction("0x40004efc", "gpio_intr_test");
		renameFunction("0x40004cd0", "gpio_output_set");
		renameFunction("0x40004d90", "gpio_pin_intr_state_set");
		renameFunction("0x40004ed4", "gpio_pin_wakeup_disable");
		renameFunction("0x40004e90", "gpio_pin_wakeup_enable");
		renameFunction("0x40004d5c", "gpio_register_get");
		renameFunction("0x40004d04", "gpio_register_set");
		renameFunction("0x4000a2cc", "hmac_md5");
		renameFunction("0x4000a160", "hmac_md5_vector");
		renameFunction("0x4000ba28", "hmac_sha1");
		renameFunction("0x4000b8b4", "hmac_sha1_vector");
		renameFunction("0x40004f40", "lldesc_build_chain");
		renameFunction("0x40005050", "lldesc_num2link");
		renameFunction("0x4000507c", "lldesc_set_owner");
		renameFunction("0x40000fec", "main");
		renameFunction("0x400097ac", "md5_vector");
		renameFunction("0x40001c2c", "mem_calloc");
		renameFunction("0x400019e0", "mem_free");
		renameFunction("0x40001998", "mem_init");
		renameFunction("0x40001b40", "mem_malloc");
		renameFunction("0x40001c6c", "mem_realloc");
		renameFunction("0x40001a14", "mem_trim");
		renameFunction("0x40001c58", "mem_zalloc");
		renameFunction("0x4000dea8", "memcmp");
		renameFunction("0x4000df48", "memcpy");
		renameFunction("0x4000e04c", "memmove");
		renameFunction("0x4000e190", "memset");
		renameFunction("0x400031c0", "multofup");
		renameFunction("0x4000b840", "pbkdf2_sha1");
		renameFunction("0x40006b08", "phy_get_romfuncs");
		renameFunction("0x40000600", "rand");
		renameFunction("0x4000dd68", "rc4_skip");
		renameFunction("0x40003d08", "recv_packet");
		renameFunction("0x40000a04", "remove_head_space");
		renameFunction("0x40008dd0", "rijndaelKeySetupDec");
		renameFunction("0x40009300", "rijndaelKeySetupEnc");
		renameFunction("0x400060c0", "rom_abs_temp");
		renameFunction("0x40006b10", "rom_ana_inf_gating_en");
		renameFunction("0x40007a28", "rom_cal_tos_v50");
		renameFunction("0x40006f84", "rom_chip_50_set_channel");
		renameFunction("0x400060d0", "rom_chip_v5_disable_cca");
		renameFunction("0x400060ec", "rom_chip_v5_enable_cca");
		renameFunction("0x4000711c", "rom_chip_v5_rx_init");
		renameFunction("0x4000610c", "rom_chip_v5_sense_backoff");
		renameFunction("0x4000718c", "rom_chip_v5_tx_init");
		renameFunction("0x4000615c", "rom_dc_iq_est");
		renameFunction("0x400061b8", "rom_en_pwdet");
		renameFunction("0x40006238", "rom_get_bb_atten");
		renameFunction("0x40006260", "rom_get_corr_power");
		renameFunction("0x400062dc", "rom_get_fm_sar_dout");
		renameFunction("0x40006394", "rom_get_noisefloor");
		renameFunction("0x400063b0", "rom_get_power_db");
		renameFunction("0x40007268", "rom_i2c_readReg");
		renameFunction("0x4000729c", "rom_i2c_readReg_Mask");
		renameFunction("0x400072d8", "rom_i2c_writeReg");
		renameFunction("0x4000730c", "rom_i2c_writeReg_Mask");
		renameFunction("0x40006400", "rom_iq_est_disable");
		renameFunction("0x40006430", "rom_iq_est_enable");
		renameFunction("0x40006484", "rom_linear_to_db");
		renameFunction("0x400065a4", "rom_mhz2ieee");
		renameFunction("0x40007bf0", "rom_pbus_dco___SA2");
		renameFunction("0x4000737c", "rom_pbus_debugmode");
		renameFunction("0x40007410", "rom_pbus_enter_debugmode");
		renameFunction("0x40007448", "rom_pbus_exit_debugmode");
		renameFunction("0x4000747c", "rom_pbus_force_test");
		renameFunction("0x400074d8", "rom_pbus_rd");
		renameFunction("0x4000754c", "rom_pbus_set_rxgain");
		renameFunction("0x40007610", "rom_pbus_set_txgain");
		renameFunction("0x40007648", "rom_pbus_workmode");
		renameFunction("0x40007688", "rom_pbus_xpd_rx_off");
		renameFunction("0x400076cc", "rom_pbus_xpd_rx_on");
		renameFunction("0x400076fc", "rom_pbus_xpd_tx_off");
		renameFunction("0x40007740", "rom_pbus_xpd_tx_on");
		renameFunction("0x400077a0", "rom_pbus_xpd_tx_on__low_gain");
		renameFunction("0x40007804", "rom_phy_reset_req");
		renameFunction("0x4000781c", "rom_restart_cal");
		renameFunction("0x40007eb4", "rom_rfcal_pwrctrl");
		renameFunction("0x4000804c", "rom_rfcal_rxiq");
		renameFunction("0x40008264", "rom_rfcal_rxiq_set_reg");
		renameFunction("0x40008388", "rom_rfcal_txcap");
		renameFunction("0x40008610", "rom_rfcal_txiq");
		renameFunction("0x400088b8", "rom_rfcal_txiq_cover");
		renameFunction("0x40008a70", "rom_rfcal_txiq_set_reg");
		renameFunction("0x40007868", "rom_rfpll_reset");
		renameFunction("0x40007968", "rom_rfpll_set_freq");
		renameFunction("0x40008b6c", "rom_rxiq_cover_mg_mp");
		renameFunction("0x40006628", "rom_rxiq_get_mis");
		renameFunction("0x40006738", "rom_sar_init");
		renameFunction("0x4000678c", "rom_set_ana_inf_tx_scale");
		renameFunction("0x40006c50", "rom_set_channel_freq");
		renameFunction("0x400067c8", "rom_set_loopback_gain");
		renameFunction("0x40006830", "rom_set_noise_floor");
		renameFunction("0x40006550", "rom_set_rxclk_en");
		renameFunction("0x40008c6c", "rom_set_txbb_atten");
		renameFunction("0x4000650c", "rom_set_txclk_en");
		renameFunction("0x40008d34", "rom_set_txiq_cal");
		renameFunction("0x40006874", "rom_start_noisefloor");
		renameFunction("0x400068b4", "rom_start_tx_tone");
		renameFunction("0x4000698c", "rom_stop_tx_tone");
		renameFunction("0x40006a98", "rom_tx_mac_disable");
		renameFunction("0x40006ad4", "rom_tx_mac_enable");
		renameFunction("0x40006a1c", "rom_txtone_linear_pwr");
		renameFunction("0x400078dc", "rom_write_rfpll_sdm");
		renameFunction("0x400031b4", "roundup2");
		renameFunction("0x40002870", "rtc_enter_sleep");
		renameFunction("0x400025e0", "rtc_get_reset_reason");
		renameFunction("0x400029ec", "rtc_intr_handler");
		renameFunction("0x40002668", "rtc_set_sleep_mode");
		renameFunction("0x400027a4", "save_rxbcn_mactime");
		renameFunction("0x400027ac", "save_tsf_us");
		renameFunction("0x40003c80", "send_packet");
		renameFunction("0x4000ba48", "sha1_prf");
		renameFunction("0x4000a2ec", "sha1_vector");
		renameFunction("0x40005180", "sip_alloc_to_host_evt");
		renameFunction("0x400058a8", "sip_get_ptr");
		renameFunction("0x40005668", "sip_get_state");
		renameFunction("0x4000567c", "sip_init_attach");
		renameFunction("0x4000544c", "sip_install_rx_ctrl_cb");
		renameFunction("0x4000545c", "sip_install_rx_data_cb");
		renameFunction("0x400050fc", "sip_post");
		renameFunction("0x400056c4", "sip_post_init");
		renameFunction("0x4000534c", "sip_reclaim_from_host_cmd");
		renameFunction("0x400052c0", "sip_reclaim_tx_data_pkt");
		renameFunction("0x40005808", "sip_send");
		renameFunction("0x40005864", "sip_to_host_chain_append");
		renameFunction("0x40005234", "sip_to_host_evt_send_done");
		renameFunction("0x400060ac", "slc_add_credits");
		renameFunction("0x40005d90", "slc_enable");
		renameFunction("0x40005f24", "slc_from_host_chain_fetch");
		renameFunction("0x40005e94", "slc_from_host_chain_recycle");
		renameFunction("0x40005c50", "slc_init_attach");
		renameFunction("0x4000608c", "slc_init_credit");
		renameFunction("0x40006014", "slc_pause_from_host");
		renameFunction("0x40005c1c", "slc_reattach");
		renameFunction("0x4000603c", "slc_resume_from_host");
		renameFunction("0x40005dc0", "slc_select_tohost_gpio");
		renameFunction("0x40005db8", "slc_select_tohost_gpio_mode");
		renameFunction("0x40005de4", "slc_send_to_host_chain");
		renameFunction("0x40006068", "slc_set_host_io_max_window");
		renameFunction("0x40005f10", "slc_to_host_chain_recycle");
		renameFunction("0x4000264c", "software_reset");
		renameFunction("0x40004644", "spi_flash_attach");
		renameFunction("0x400005f0", "srand");
		renameFunction("0x4000bdc8", "strcmp");
		renameFunction("0x4000bec8", "strcpy");
		renameFunction("0x4000bf4c", "strlen");
		renameFunction("0x4000bfa8", "strncmp");
		renameFunction("0x4000c0a0", "strncpy");
		renameFunction("0x4000e1e0", "strstr");
		renameFunction("0x40002c64", "timer_insert");
		renameFunction("0x4000383c", "uartAttach");
		renameFunction("0x40003924", "uart_baudrate_detect");
		renameFunction("0x400038a4", "uart_buff_switch");
		renameFunction("0x400039d8", "uart_div_modify");
		renameFunction("0x40003bbc", "uart_rx_intr_handler");
		renameFunction("0x40003b8c", "uart_rx_one_char");
		renameFunction("0x40003b64", "uart_rx_one_char_block");
		renameFunction("0x40003ec8", "uart_rx_readbuff");
		renameFunction("0x40003b30", "uart_tx_one_char");
		renameFunction("0x4000bc40", "wepkey_128");
		renameFunction("0x4000bb3c", "wepkey_64");
		renameFunction("0x40000688", "xthal_bcopy");
		renameFunction("0x4000074c", "xthal_copy123");
		renameFunction("0x4000dd4c", "xthal_get_ccompare");
		renameFunction("0x4000dd38", "xthal_get_ccount");
		renameFunction("0x4000dd58", "xthal_get_interrupt");
		renameFunction("0x4000dd58", "xthal_get_intread");
		renameFunction("0x400006c4", "xthal_memcpy");
		renameFunction("0x4000dd40", "xthal_set_ccompare");
		renameFunction("0x4000dd60", "xthal_set_intclear");
		renameFunction("0x4000e320", "xthal_spill_registers_into_stack_nw");
		renameFunction("0x4000e324", "xthal_window_spill");
		renameFunction("0x4000e320", "xthal_window_spill_nw");
		renameFunction("0x3fffccf0", "Te0");
		renameFunction("0x3fffde10", "UartDev");
	}
	
	private void renameFunction(String address, String newName) throws AddressFormatException, DuplicateNameException, InvalidInputException {
		Function f = getFunctionContaining(getAddressFactory().getDefaultAddressSpace().getAddress(address));
		
		if (f != null) {
			f.setName(newName, SourceType.DEFAULT);
		}
	}
}
